trigger:
  branches:
    include:
      - main
variables:
  imageName: jmuachifi/sre-challenge-argocd
stages:
  - stage: Code_Check
    jobs:
      - job: CodeCheck
        displayName: Code Quality Check
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: |
              python -m pip install --upgrade pip
              pip install flake8
            displayName: Install dependencies
          - script: >-
              flake8 src/ --count --select=E9,F63,F7,F82 --show-source
              --statistics
            displayName: Run Code Quality Checks
  - stage: Build_Image
    dependsOn: Code_Check
    jobs:
      - job: BuildImage
        displayName: Build Docker Image
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: |
              docker build -t $(imageName):$(Build.SourceVersion) .
              docker tag $(imageName):$(Build.SourceVersion) $(imageName):latest
            displayName: Build Docker Image
  - stage: Security_Check
    dependsOn: Build_Image
    jobs:
      - job: SecurityCheck
        displayName: Run Security Scan with Trivy
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: >
              echo "Updating Trivy vulnerability database..."

              docker run --rm -v $(System.DefaultWorkingDirectory):/root/.cache/
              aquasec/trivy:latest image --download-db-only
            displayName: Preload Trivy Vulnerability Database
          - script: >
              echo "Running Trivy vulnerability scanner..."

              docker run --rm -v $(System.DefaultWorkingDirectory):/root/.cache/
              aquasec/trivy:latest image --exit-code 0
              $(imageName):$(Build.SourceVersion)
            displayName: Run Trivy Vulnerability Scan
  - stage: Update_Kustomization
    dependsOn: Security_Check
    jobs:
      - job: UpdateKustomization
        displayName: Update Kustomization with New Image Tag
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: >
              git config --global user.email "azure-devops@portal-azure.com"

              git config --global user.name "Azure DevOps"

              sed -i "s/newTag:.*/newTag: $(Build.SourceVersion)/"
              k8s/kustomization.yaml

              git add kustomization.yaml

              git commit -m "Update image tag to $(Build.SourceVersion) [skip
              ci]"

              git push
              https://$(AZURE_PAT)@dev.azure.com/boostcloudexpert/AzureDevOpsDemo/_git/sre-challenge-argocd.git
              HEAD:main
            displayName: Update kustomization.yaml with new image tag
  - stage: Push_Image
    dependsOn: Update_Kustomization
    jobs:
      - job: PushImage
        displayName: Push Docker Image to Docker Hub
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: >
              echo "$(DOCKER_PASSWORD)" | docker login -u "$(DOCKER_USERNAME)"
              --password-stdin

              docker push $(imageName):$(Build.SourceVersion)

              docker push $(imageName):latest
            displayName: Push Docker Image to Docker Hub
